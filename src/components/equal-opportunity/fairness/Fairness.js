import React, { Component } from "react"
import "./Fairness.css"

import gsap from "gsap"
import ScrollTrigger from "gsap/ScrollTrigger"

const bodyTop = [
  "Equality of Opportunity uses true positive rates as a tangible, quantifiable way to represent the somewhat abstract idea of opportunity. To calculate the true positive rate, we ask: out of all students who, if given admission, would enroll at Wichita (represented by the solid circle in the diagram below), how many were correctly predicted as so (the shaded area).",
]
const bodyBottom = [
  'The true positive rate is calculated as the number of students in the shaded area divided by the number of those in the "would enroll" area. The denominator in this fraction plays a key role in our conceptualization of opportunity. We want to equalize rates among demographic groups, but that equalization is conditioned upon the ground truth - whether or not each student would enroll if given admission. Equalization of true positive rates would mean that if a student would enroll, then they should be as likely to be predicted as so as their peers from other demographic groups. Equalization of the prediction rates, which is what Equality of Outcome requires, does the same thing but without the "if" phrase.',
]

class Fairness extends Component {
  stInstances = []
  componentDidMount() {
    if (window) {
      const DrawSVG = require("../../../resources/DrawSVG")
      gsap.registerPlugin(DrawSVG)
    }
    this.stInstances.push(
      ScrollTrigger.create({
        trigger: ".eof-viz",
        start: "top 90%",
        end: "top 20%",
        scrub: 0.4,
        animation: gsap
          .timeline()
          .add(
            gsap.fromTo(
              [".eof-viz-ground-circle", ".eof-viz-ground-line"],
              { drawSVG: 0 },
              {
                drawSVG: "100%",
                ease: "power2.out",
                duration: 0.6,
                stagger: 0.3,
              }
            ),
            0
          )
          .add(
            gsap.fromTo(
              [".eof-viz-ground-text"],
              { opacity: 0 },
              { opacity: 1, ease: "power2.out", duration: 0.6 }
            ),
            0.3
          )
          .add(
            gsap.fromTo(
              [
                ".eof-viz-prediction-circle",
                ".eof-viz-prediction-line",
                ".eof-viz-prediction-text",
              ],
              { opacity: 0 },
              { opacity: 1, ease: "power2.out", duration: 0.6, stagger: 0.04 }
            ),
            0.4
          )
          .add(
            gsap.fromTo(
              [".eof-viz-area"],
              { opacity: 0 },
              { opacity: 1, ease: "power2.out", duration: 0.4 }
            ),
            0.6
          ),
      })
    )
  }
  componentWillUnmount() {
    this.stInstances.forEach(instance => instance.kill())
  }
  render() {
    return (
      <div className="dp-fairness article-wrap my-4">
        <div className="heading-wrap center mt-3">
          <div className="heading-inner-wrap">
            <h1 className="heading-number">2.</h1>
            <h2 className="heading">Opportunity vs. Outcome</h2>
            <div className="heading-quote-wrap mt-2">
              <div className="heading-quote-line" />
            </div>
          </div>
        </div>
        <div className="row dp-fairness-row mt-2 mb-3">
          <div className="text-wrap center">
            <div className="guf-text-wrap">
              {bodyTop.map((para, index) => {
                return (
                  <p className="guf-text" key={index}>
                    {para}
                  </p>
                )
              })}
            </div>
          </div>
        </div>
        <div className="heading-wrap center">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="610"
            height="310"
            fill="none"
            className="eof-viz"
          >
            <path
              stroke="#fdf3d8"
              strokeLinecap="round"
              strokeWidth="2"
              className="eof-viz-ground-circle"
              d="M431.598 112.64C419.618 21.17 274.504-6.656 183.843 3.898c-54.537 6.349-127.8 23.247-155.764 87.136-28.885 65.993 11.205 189.131 179.04 189.7 117.829.399 238.617-60.144 224.479-168.094z"
            ></path>
            <path
              stroke="#fdf3d8"
              strokeDasharray="10 8"
              strokeLinecap="round"
              strokeWidth="2"
              className="eof-viz-prediction-circle"
              d="M285.804 298.61C408.582 283.175 424.934 178.107 395 117.729c-18.984-38.291-66.648-83.92-156.541-102.84C148.565-4.03 2.201 31.811 21.829 154.927c13.778 86.433 119.075 161.9 263.975 143.683z"
            ></path>
            <path
              fill="#fdf3d8"
              className="eof-viz-ground-text"
              d="M503.274 107.03h-2.185l-2.318 8.797h-.076l-2.204-8.797h-2.375l3.097 11.97h2.603l2.28-8.626h.076l2.261 8.626h2.622l3.097-11.97h-2.28l-2.185 8.816h-.076l-2.337-8.816zm15.754 7.79c0-1.292-.418-2.356-1.254-3.173-.817-.836-1.881-1.254-3.173-1.254-1.273 0-2.337.418-3.173 1.254-.817.817-1.235 1.881-1.235 3.173s.418 2.356 1.235 3.173c.836.817 1.9 1.235 3.173 1.235 1.292 0 2.356-.418 3.173-1.235.836-.817 1.254-1.881 1.254-3.173zm-6.536 0c0-1.596.741-2.698 2.109-2.698 1.387 0 2.128 1.102 2.128 2.698 0 1.577-.741 2.679-2.128 2.679-1.368 0-2.109-1.102-2.109-2.679zm13.56.285c0 1.425-.684 2.337-1.805 2.337s-1.596-.76-1.596-2.033v-4.788h-2.28v5.244c0 .931.228 1.71.665 2.375.437.665 1.216.988 2.318.988 1.273 0 2.261-.627 2.698-1.596V119h2.28v-8.379h-2.28v4.484zm4.21-8.075V119h2.28v-11.97h-2.28zm10.388 7.942c0 1.52-.931 2.47-2.223 2.47-1.425 0-2.166-1.045-2.166-2.622 0-1.596.741-2.641 2.166-2.641 1.292 0 2.223.95 2.223 2.47v.323zm-.019 4.028h2.28v-11.97h-2.28v5.206c-.38-1.007-1.425-1.843-2.888-1.843-1.235 0-2.185.437-2.831 1.292-.627.855-.95 1.9-.95 3.135 0 1.235.323 2.28.95 3.135.646.855 1.596 1.273 2.831 1.273 1.463 0 2.508-.817 2.888-1.824V119zm13.748-2.926c-.323.931-.988 1.425-2.109 1.425-1.235 0-2.204-.874-2.28-2.109h6.289v-.817c0-1.14-.361-2.128-1.064-2.945-.703-.817-1.729-1.235-3.078-1.235-1.254 0-2.299.437-3.135 1.292-.836.855-1.254 1.938-1.254 3.249 0 1.311.418 2.356 1.254 3.135.855.779 1.919 1.159 3.192 1.159 2.128 0 3.591-1.121 4.028-2.964l-1.843-.19zm-4.351-2.109c.209-1.045.855-1.9 2.09-1.9 1.273 0 1.862.931 1.938 1.9h-4.028zm9.994.551c0-1.387.722-2.318 1.881-2.318 1.121 0 1.634.741 1.634 2.033V119h2.28v-5.225c0-.931-.228-1.71-.703-2.375-.456-.665-1.235-1.007-2.356-1.007-1.235 0-2.337.665-2.736 1.596v-1.368h-2.28V119h2.28v-4.484zm13.423-3.781c-.247-.209-.665-.342-1.178-.342-1.159 0-2.033.893-2.337 1.824v-1.596h-2.28V119h2.28v-4.142c0-1.52.817-2.356 1.976-2.356.551 0 .931.114 1.368.361l.171-2.128zm9.411 4.085c0-1.292-.418-2.356-1.254-3.173-.817-.836-1.881-1.254-3.173-1.254-1.273 0-2.337.418-3.173 1.254-.817.817-1.235 1.881-1.235 3.173s.418 2.356 1.235 3.173c.836.817 1.9 1.235 3.173 1.235 1.292 0 2.356-.418 3.173-1.235.836-.817 1.254-1.881 1.254-3.173zm-6.536 0c0-1.596.741-2.698 2.109-2.698 1.387 0 2.128 1.102 2.128 2.698 0 1.577-.741 2.679-2.128 2.679-1.368 0-2.109-1.102-2.109-2.679zm7.974-7.79V119h2.28v-11.97h-2.28zm4.193 0V119h2.28v-11.97h-2.28z"
            ></path>
            <path
              stroke="#fdf3d8"
              strokeDasharray="10 8"
              strokeLinecap="round"
              strokeWidth="2"
              className="eof-viz-prediction-line"
              d="M370.566 275.66c10.229 8.879 29.335 15.778 45.567 15.833"
            ></path>
            <path
              fill="#fdf3d8"
              className="eof-viz-prediction-text"
              d="M429.401 292.877h2.413c3.04 0 4.807-1.444 4.807-3.933s-1.767-3.914-4.807-3.914h-4.769V297h2.356v-4.123zm0-1.938v-3.99h2.337c1.767 0 2.565.722 2.565 2.014 0 1.292-.798 1.976-2.565 1.976h-2.337zm14.255-2.204c-.247-.209-.665-.342-1.178-.342-1.159 0-2.033.893-2.337 1.824v-1.596h-2.28V297h2.28v-4.142c0-1.52.817-2.356 1.976-2.356.551 0 .931.114 1.368.361l.171-2.128zm7.207 5.339c-.323.931-.988 1.425-2.109 1.425-1.235 0-2.204-.874-2.28-2.109h6.289v-.817c0-1.14-.361-2.128-1.064-2.945-.703-.817-1.729-1.235-3.078-1.235-1.254 0-2.299.437-3.135 1.292-.836.855-1.254 1.938-1.254 3.249 0 1.311.418 2.356 1.254 3.135.855.779 1.919 1.159 3.192 1.159 2.128 0 3.591-1.121 4.028-2.964l-1.843-.19zm-4.351-2.109c.209-1.045.855-1.9 2.09-1.9 1.273 0 1.862.931 1.938 1.9h-4.028zm13.908 1.007c0 1.52-.931 2.47-2.223 2.47-1.425 0-2.166-1.045-2.166-2.622 0-1.596.741-2.641 2.166-2.641 1.292 0 2.223.95 2.223 2.47v.323zm-.019 4.028h2.28v-11.97h-2.28v5.206c-.38-1.007-1.425-1.843-2.888-1.843-1.235 0-2.185.437-2.831 1.292-.627.855-.95 1.9-.95 3.135 0 1.235.323 2.28.95 3.135.646.855 1.596 1.273 2.831 1.273 1.463 0 2.508-.817 2.888-1.824V297zm4.159-9.747h2.337v-2.223h-2.337v2.223zm.038 1.368V297h2.28v-8.379h-2.28zm3.699 4.199c0 1.311.418 2.375 1.254 3.192.836.817 1.9 1.216 3.173 1.216 1.235 0 2.204-.361 2.888-1.064.684-.722 1.064-1.577 1.159-2.584l-1.919-.171c-.171 1.273-.893 2.071-2.128 2.071s-2.128-.931-2.128-2.66c0-1.748.893-2.679 2.128-2.679s1.957.798 2.128 2.033l1.919-.133c-.095-1.007-.475-1.862-1.159-2.565-.684-.722-1.653-1.083-2.888-1.083-1.273 0-2.337.418-3.173 1.235-.836.817-1.254 1.881-1.254 3.192zm10.168 2.052c0 .893.228 1.501.703 1.843.475.342 1.026.513 1.672.513 1.007 0 1.71-.266 2.318-.722v-1.501c-.475.228-.969.399-1.425.399-.684 0-1.007-.342-1.007-1.045v-4.142h2.28v-1.596h-2.28v-2.318h-1.387l-.266 1.14c-.171.779-.418 1.197-1.235 1.33l-.57.095v1.349h1.197v4.655zm12.123-.798c-.323.931-.988 1.425-2.109 1.425-1.235 0-2.204-.874-2.28-2.109h6.289v-.817c0-1.14-.361-2.128-1.064-2.945-.703-.817-1.729-1.235-3.078-1.235-1.254 0-2.299.437-3.135 1.292-.836.855-1.254 1.938-1.254 3.249 0 1.311.418 2.356 1.254 3.135.855.779 1.919 1.159 3.192 1.159 2.128 0 3.591-1.121 4.028-2.964l-1.843-.19zm-4.351-2.109c.209-1.045.855-1.9 2.09-1.9 1.273 0 1.862.931 1.938 1.9h-4.028zm13.908 1.007c0 1.52-.931 2.47-2.223 2.47-1.425 0-2.166-1.045-2.166-2.622 0-1.596.741-2.641 2.166-2.641 1.292 0 2.223.95 2.223 2.47v.323zm-.019 4.028h2.28v-11.97h-2.28v5.206c-.38-1.007-1.425-1.843-2.888-1.843-1.235 0-2.185.437-2.831 1.292-.627.855-.95 1.9-.95 3.135 0 1.235.323 2.28.95 3.135.646.855 1.596 1.273 2.831 1.273 1.463 0 2.508-.817 2.888-1.824V297zm7.897-2.128c0 .893.228 1.501.703 1.843.475.342 1.026.513 1.672.513 1.007 0 1.71-.266 2.318-.722v-1.501c-.475.228-.969.399-1.425.399-.684 0-1.007-.342-1.007-1.045v-4.142h2.28v-1.596h-2.28v-2.318h-1.387l-.266 1.14c-.171.779-.418 1.197-1.235 1.33l-.57.095v1.349h1.197v4.655zm14.327-2.052c0-1.292-.418-2.356-1.254-3.173-.817-.836-1.881-1.254-3.173-1.254-1.273 0-2.337.418-3.173 1.254-.817.817-1.235 1.881-1.235 3.173s.418 2.356 1.235 3.173c.836.817 1.9 1.235 3.173 1.235 1.292 0 2.356-.418 3.173-1.235.836-.817 1.254-1.881 1.254-3.173zm-6.536 0c0-1.596.741-2.698 2.109-2.698 1.387 0 2.128 1.102 2.128 2.698 0 1.577-.741 2.679-2.128 2.679-1.368 0-2.109-1.102-2.109-2.679zm17.524 1.254c-.323.931-.988 1.425-2.109 1.425-1.235 0-2.204-.874-2.28-2.109h6.289v-.817c0-1.14-.361-2.128-1.064-2.945-.703-.817-1.729-1.235-3.078-1.235-1.254 0-2.299.437-3.135 1.292-.836.855-1.254 1.938-1.254 3.249 0 1.311.418 2.356 1.254 3.135.855.779 1.919 1.159 3.192 1.159 2.128 0 3.591-1.121 4.028-2.964l-1.843-.19zm-4.351-2.109c.209-1.045.855-1.9 2.09-1.9 1.273 0 1.862.931 1.938 1.9h-4.028zm9.994.551c0-1.387.722-2.318 1.881-2.318 1.121 0 1.634.741 1.634 2.033V297h2.28v-5.225c0-.931-.228-1.71-.703-2.375-.456-.665-1.235-1.007-2.356-1.007-1.235 0-2.337.665-2.736 1.596v-1.368h-2.28V297h2.28v-4.484zm13.424-3.781c-.247-.209-.665-.342-1.178-.342-1.159 0-2.033.893-2.337 1.824v-1.596h-2.28V297h2.28v-4.142c0-1.52.817-2.356 1.976-2.356.551 0 .931.114 1.368.361l.171-2.128zm9.411 4.085c0-1.292-.418-2.356-1.254-3.173-.817-.836-1.881-1.254-3.173-1.254-1.273 0-2.337.418-3.173 1.254-.817.817-1.235 1.881-1.235 3.173s.418 2.356 1.235 3.173c.836.817 1.9 1.235 3.173 1.235 1.292 0 2.356-.418 3.173-1.235.836-.817 1.254-1.881 1.254-3.173zm-6.536 0c0-1.596.741-2.698 2.109-2.698 1.387 0 2.128 1.102 2.128 2.698 0 1.577-.741 2.679-2.128 2.679-1.368 0-2.109-1.102-2.109-2.679zm7.973-7.79V297h2.28v-11.97h-2.28zm4.194 0V297h2.28v-11.97h-2.28z"
            ></path>
            <path
              stroke="#fdf3d8"
              strokeLinecap="round"
              strokeWidth="2"
              className="eof-viz-ground-line"
              d="M441.794 118.518c6.411-1.452 24.252-4.42 44.325-4.674"
            ></path>
            <mask
              id="a"
              width="388"
              height="292"
              x="20"
              y="10"
              maskUnits="userSpaceOnUse"
            >
              <path
                fill="#fff"
                d="M285.804 298.61C408.582 283.175 424.934 178.107 395 117.729c-18.984-38.291-66.648-83.92-156.541-102.84C148.565-4.03 2.201 31.811 21.829 154.927c13.778 86.433 119.075 161.9 263.975 143.683z"
              ></path>
            </mask>
            <g mask="url(#a)">
              <path
                fill="#fdf3d8"
                fillOpacity="0.12"
                className="eof-viz-area"
                d="M431.598 112.64C419.618 21.17 274.504-6.656 183.843 3.898c-54.537 6.349-127.8 23.247-155.764 87.136-28.885 65.993 11.205 189.131 179.04 189.7 117.829.399 238.617-60.144 224.479-168.094z"
              ></path>
            </g>
          </svg>
        </div>
        <div className="row dp-fairness-row mt-3">
          <div className="text-wrap center">
            <div className="guf-text-wrap">
              {bodyBottom.map((para, index) => {
                return (
                  <p className="guf-text" key={index}>
                    {para}
                  </p>
                )
              })}
            </div>
          </div>
        </div>
      </div>
    )
  }
}

export default Fairness
